import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;

class Result {


    public static int hourglassSum(List<List<Integer>> arr) {
    int lin = 0;
        int col = 0;
        int maxValue = Integer.MIN_VALUE;
       
        while(true) {
            int sumActualHourGlass = 
                arr.get(lin).get(col) + arr.get(lin).get(col + 1) + arr.get(lin).get(col + 2) + 
                arr.get(lin + 1).get(col + 1) + 
                arr.get(lin + 2).get(col) + arr.get(lin + 2).get(col + 1) + arr.get(lin + 2).get(col + 2);
                
            maxValue = sumActualHourGlass > maxValue ? sumActualHourGlass : maxValue;
            
            if(col < 3) {
                col = col + 1;
            } else if (lin < 3) {
                lin = lin + 1;
                col = 0;
            } else {
                break;   
            }
        }
        return maxValue;
    }

    }



public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        List<List<Integer>> arr = new ArrayList<>();

        IntStream.range(0, 6).forEach(i -> {
            try {
                arr.add(
                    Stream.of(bufferedReader.readLine().replaceAll("\\s+$", "").split(" "))
                        .map(Integer::parseInt)
                        .collect(toList())
                );
            } catch (IOException ex) {
                throw new RuntimeException(ex);
            }
        });

        int result = Result.hourglassSum(arr);

        bufferedWriter.write(String.valueOf(result));
        bufferedWriter.newLine();

        bufferedReader.close();
        bufferedWriter.close();
    }
}
